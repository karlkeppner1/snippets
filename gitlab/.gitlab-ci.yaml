# .gitlab-ci.yml organization - https://docs.gitlab.com/ee/ci/yaml/

#####################################################################################
# Stages - https://docs.gitlab.com/ee/ci/yaml/#stages
#####################################################################################
stages:  # The ordering of elements in stages defines the ordering of jobs’ execution: Jobs of the same stage are run in parallel. Jobs of the next stage are run after the jobs from the previous stage complete successfully.
  - .pre # https://docs.gitlab.com/ee/ci/yaml/#pre-and-post
  - stage1
  - stage2
  - .post # https://docs.gitlab.com/ee/ci/yaml/#pre-and-post

#####################################################################################
# Default parameters # https://docs.gitlab.com/ee/ci/yaml/#setting-default-parameters
#####################################################################################
default: 
  after_script:
  artifacts:
  before_script:
  cache:
  image:
  interruptible:
  retry:
  services:
  tags:
  timeout:

#####################################################################################
# Global variables # https://docs.gitlab.com/ee/ci/yaml/#variables
#####################################################################################
variables:
  FOO: 'bar'

#####################################################################################
# Jobs - https://docs.gitlab.com/ee/ci/yaml/#introduction
#####################################################################################
job:  # Defined with constraints stating under what conditions they should be executed. Top-level elements with an arbitrary name and must contain at least the script clause. Not limited in how many can be defined. 
  after_script:  # Override a set of commands that are executed after job.
  allow_failure:  # Allow job to fail. Failed job doesn’t contribute to commit status.
  artifacts:  # List of files and directories to attach to a job on success. Also available: artifacts:paths, artifacts:expose_as, artifacts:name, artifacts:untracked, artifacts:when, artifacts:expire_in, artifacts:reports, artifacts:reports:junit, and artifacts:reports:cobertura. In GitLab Enterprise Edition, these are available: artifacts:reports:codequality, artifacts:reports:sast, artifacts:reports:dependency_scanning, artifacts:reports:container_scanning, artifacts:reports:dast, artifacts:reports:license_management, artifacts:reports:performance and artifacts:reports:metrics.
  before_script:  # Override a set of commands that are executed before job.
  cache:  # List of files that should be cached between subsequent runs. Also available: cache:paths, cache:key, cache:untracked, and cache:policy.
  coverage:  # Code coverage settings for a given job.
  dependencies:  # Restrict which artifacts are passed to a specific job by providing a list of jobs to fetch artifacts from.
  environment:  # Name of an environment to which the job deploys. Also available: environment:name, environment:url, environment:on_stop, environment:auto_stop_in and environment:action.
  except:  # Limit when jobs are not created. Also available: except:refs, except:kubernetes, except:variables, and except:changes.
  extends:  # Configuration entries that this job is going to inherit from.
  image:  # Use docker images. Also available: image:name and image:entrypoint.
  include:  # Allows this job to include external YAML files. Also available: include:local, include:file, include:template, and include:remote.
  interruptible:  # Defines if a job can be canceled when made redundant by a newer run.
  only:  # Limit when jobs are created. Also available: only:refs, only:kubernetes, only:variables, and only:changes.
  pages:  # Upload the result of a job to use with GitLab Pages.
  parallel:  # How many instances of a job should be run in parallel.
  resource_group:  # Limit job concurrency.
  retry:  # When and how many times a job can be auto-retried in case of a failure.
  rules:  # List of conditions to evaluate and determine selected attributes of a job, and whether or not it is created. May not be used alongside only/except.
  script:  # REQUIRED Shell script which is executed by Runner. https://docs.gitlab.com/ee/ci/yaml/#script
  services:  # Use docker services images. Also available: services:name, services:alias, services:entrypoint, and services:command.
  stage:  # Defines a job stage (default: test).
  stages:  # Define stages in a pipeline.
  tags:  # List of tags which are used to select Runner.
  timeout:  # Define a custom job-level timeout that takes precedence over the project-wide setting.
  trigger:  # Defines a downstream pipeline trigger.
  variables:  # Define job variables on a job level.
  when:  # When to run job. Also available: when:manual and when:delayed.